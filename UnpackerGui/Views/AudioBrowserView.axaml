<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:UnpackerGui.Views"
             xmlns:vm="clr-namespace:UnpackerGui.ViewModels"
             xmlns:conv="clr-namespace:UnpackerGui.Converters"
             xmlns:ctrl="clr-namespace:UnpackerGui.Controls"
             xmlns:c="clr-namespace:UnpackerGui.Commands"
             xmlns:ic="using:FluentIcons.Avalonia"
             mc:Ignorable="d"
             x:Class="UnpackerGui.Views.AudioBrowserView"
             x:DataType="vm:AudioBrowserViewModel"
             d:DesignWidth="800"
             d:DesignHeight="440"
             Loaded="View_Loaded">
    <Design.DataContext>
        <vm:DesignAudioBrowserViewModel/>
    </Design.DataContext>
    <UserControl.Resources>
        <conv:EqualityConverter x:Key="EqualityConverter"/>
        <conv:ExpressionConverter x:Key="ExpressionConverter"/>
        <conv:VolumeToIconConverter x:Key="VolumeToIconConverter"/>
        <conv:BooleanToStringConverter x:Key="BooleanToStringConverter"/>
        <conv:DoubleToTimestampConverter x:Key="DoubleToTimestampConverter"/>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="Button,ToggleButton">
            <Setter Property="Padding"
                    Value="0"/>
            <Setter Property="Background"
                    Value="Transparent"/>
        </Style>
        <Style Selector="Button:disabled/template/ContentPresenter,ToggleButton:checked/template/ContentPresenter,ToggleButton:pressed/template/ContentPresenter,ToggleButton:pointerover/template/ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent"/>
        </Style>
        <Style Selector="ToggleButton:checked/template/ContentPresenter">
            <Setter Property="Foreground"
                    Value="{DynamicResource SystemBaseHighColor}"/>
        </Style>
        <Style Selector="ToggleSwitch">
            <Setter Property="Template">
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}"
                          RowDefinitions="Auto,*">

                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Grid.Row="0"
                                          VerticalAlignment="Top"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{DynamicResource ToggleSwitchTopHeaderMargin}"
                                          RecognizesAccessKey="True"/>

                        <Grid Grid.Row="1"
                              MinWidth="{DynamicResource ToggleSwitchThemeMinWidth}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="{DynamicResource ToggleSwitchPreContentMargin}"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="{DynamicResource ToggleSwitchPostContentMargin}"/>
                            </Grid.RowDefinitions>

                            <Grid x:Name="SwitchAreaGrid"
                                  Grid.RowSpan="3"
                                  Background="{DynamicResource ToggleSwitchContainerBackground}"
                                  Margin="0,5"
                                  TemplatedControl.IsTemplateFocusTarget="True"/>

                            <Border x:Name="OuterBorder"
                                    Grid.Row="1"
                                    Width="40"
                                    Height="20"
                                    Background="{DynamicResource ToggleSwitchFillOn}"
                                    CornerRadius="10"/>

                            <Border x:Name="SwitchKnobBounds"
                                    Grid.Row="1"
                                    Width="40"
                                    Height="20"
                                    Background="{DynamicResource ToggleSwitchFillOn}"
                                    CornerRadius="10"/>

                            <Canvas x:Name="PART_SwitchKnob"
                                    Grid.Row="1"
                                    Width="20"
                                    Height="20"
                                    HorizontalAlignment="Left">

                                <Grid x:Name="PART_MovingKnobs"
                                      Width="20"
                                      Height="20">
                                    <ic:FluentIcon x:Name="SwitchKnobOn"
                                                   IsVisible="{Binding $parent[ToggleSwitch].IsChecked}"
                                                   Icon="PlayCircle"
                                                   FontSize="22"
                                                   Foreground="{DynamicResource ToggleButtonForegroundChecked}"/>
                                    <ic:FluentIcon x:Name="SwitchKnobOff"
                                                   IsVisible="{Binding !$parent[ToggleSwitch].IsChecked}"
                                                   Icon="PauseCircle"
                                                   FontSize="22"
                                                   Foreground="{DynamicResource ToggleButtonForegroundChecked}"/>
                                </Grid>
                            </Canvas>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter>
        </Style>
        <Style Selector="ToggleSwitch:pointerover/template/Border">
            <Setter Property="Background" Value="{DynamicResource ToggleSwitchFillOnPointerOver}"/>
        </Style>
        <Style Selector="ToggleSwitch:disabled/template/Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedDisabled}"/>
        </Style>
    </UserControl.Styles>
    <Grid ColumnDefinitions="220,Auto,*">
        <!--Audio Assets-->
        <DataGrid Grid.Column="0"
                  Name="assetGrid"
                  ItemsSource="{Binding Assets}"
                  SelectedItem="{Binding SelectedAsset}"
                  IsReadOnly="True"
                  GridLinesVisibility="Horizontal"
                  HorizontalScrollBarVisibility="Disabled"
                  BorderThickness="1"
                  BorderBrush="Gray"
                  ClipboardCopyMode="None"
                  Margin="5 5 0 5"
                  DoubleTapped="DataGrid_DoubleTapped"
                  Sorting="DataGrid_Sorting">
            <!--Audio Column-->
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}"
                                    Header="Audio"/>
            </DataGrid.Columns>
            <DataGrid.Styles>
                <Style Selector="DataGridColumnHeader">
                    <Setter Property="Margin"
                            Value="-3 0 0 0"/>
                </Style>
                <Style Selector="DataGridCell">
                    <Setter Property="MinHeight"
                            Value="0"/>
                    <Setter Property="Padding"
                            Value="-3 3 -3 3"/>
                </Style>
                <!--Audio Row Context Menu-->
                <Style Selector="DataGridRow">
                    <Setter Property="ContextMenu">
                        <ContextMenu IsVisible="{Binding SelectedAsset,Converter={x:Static ObjectConverters.IsNotNull}}"
                                     DataContext="{Binding $parent.DataContext}">
                            <MenuItem Header="Open"
                                      IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=1}}"
                                      Command="{x:Static c:StaticCommands.OpenAssetCommand}"
                                      CommandParameter="{Binding SelectedAsset}"/>
                            <MenuItem Header="Delete"
                                      IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=1}}"
                                      Command="{Binding $parent[Window].((vm:MainViewModel)DataContext).DeleteAssetsCommand}"
                                      CommandParameter="{Binding SelectedAssets}"/>
                            <Separator IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=1}}"/>
                            <MenuItem Header="Copy"
                                      Command="{x:Static c:StaticCommands.CopyCommand}"
                                      CommandParameter="{Binding SelectedAsset?.Name}"/>
                            <MenuItem Header="Show in Asset Browser"
                                      IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=1}}"
                                      Click="MenuItem_Click_ShowAssetBrowser"/>
                            <Separator/>
                            <MenuItem Header="Save As..."
                                      IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=1}}"
                                      Command="{Binding $parent[Window].((vm:MainViewModel)DataContext).SaveAssetCommand}"
                                      CommandParameter="{Binding SelectedAsset}"/>
                            <MenuItem Header="Extract Selected Assets..."
                                      IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=>1}}"
                                      Command="{Binding $parent[Window].((vm:MainViewModel)DataContext).ExtractAssetsCommand}"
                                      CommandParameter="{Binding SelectedAssets}"/>
                            <MenuItem Header="Delete Selected Assets"
                                      IsVisible="{Binding SelectedAssets.Count,Converter={StaticResource ExpressionConverter},ConverterParameter=>1}}"
                                      Command="{Binding $parent[Window].((vm:MainViewModel)DataContext).DeleteAssetsCommand}"
                                      CommandParameter="{Binding SelectedAssets}"/>
                        </ContextMenu>
                    </Setter>
                </Style>
                <!--DataGrid Column Header Context Menu-->
                <Style Selector="DataGridColumnHeader">
                    <Setter Property="ContextMenu">
                        <ContextMenu DataContext="{Binding $parent.DataContext}">
                            <MenuItem Header="Copy"
                                      IsVisible="{Binding !!Assets.Count}"
                                      Click="MenuItem_Click_CopyDataGridColumn"/>
                        </ContextMenu>
                    </Setter>
                </Style>
            </DataGrid.Styles>
        </DataGrid>
        <!--Allow User Resize Columns-->
        <GridSplitter Grid.Column="1"
                      Width="5"
                      ShowsPreview="True"/>
        <!--Media Player-->
        <Border Grid.Column="2"
                BorderBrush="Gray"
                BorderThickness="1"
                Margin="0 5 5 5">
            <Grid RowDefinitions="*,Auto"
                  ClipToBounds="True">
                <!--Media Controls-->
                <StackPanel Grid.Column="0"
                            Orientation="Vertical"
                            Margin="10"
                            VerticalAlignment="Center">
                    <!--Seek Slider-->
                    <Grid ColumnSpacing="10"
                          ColumnDefinitions="Auto,*,Auto"
                          RowDefinitions="Auto"
                          VerticalAlignment="Center"
                          ClipToBounds="True"
                          IsEnabled="{Binding CanPlay}">
                        <!--Current Time-->
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Position, Converter={StaticResource DoubleToTimestampConverter}}"/>
                        <!--Slider-->
                        <Slider Grid.Column="1"
                                Minimum="0"
                                Maximum="{Binding Length}"
                                Value="{Binding Position}"
                                ToolTip.Tip="Seek"/>
                        <!--End Time-->
                        <TextBlock Grid.Column="2"
                                   VerticalAlignment="Center"
                                   Text="{Binding Length, Converter={StaticResource DoubleToTimestampConverter}}"/>
                    </Grid>
                    <!--Button Controls-->
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                Spacing="10">
                        <StackPanel.Styles>
                            <Style Selector="ic|FluentIcon">
                                <Setter Property="FontSize"
                                        Value="24"/>
                            </Style>
                        </StackPanel.Styles>
                        <!--Autoplay Button-->
                        <ToggleSwitch IsChecked="{Binding Settings.Autoplay}"
                                      ToolTip.Tip="{Binding Settings.Autoplay, Converter={StaticResource BooleanToStringConverter}, ConverterParameter=Autoplay is On/Autoplay is Off}"/>
                        <!--Seek Backward Button-->
                        <Button Command="{Binding SeekCommand}"
                                CommandParameter="{c:Double -10}"
                                ToolTip.Tip="Seek Backward"
                                IsEnabled="{Binding CanPlay}">
                            <ic:FluentIcon Icon="SkipBack10"/>
                        </Button>
                        <!--Play/Pause Button-->
                        <Button Command="{Binding TogglePlayPauseCommand}"
                                ToolTip.Tip="{Binding IsPlaying, Converter={StaticResource BooleanToStringConverter}, ConverterParameter=Pause/Play}"
                                IsEnabled="{Binding CanPlay}">
                            <ic:FluentIcon Icon="{Binding IsPlaying, Converter={StaticResource BooleanToStringConverter}, ConverterParameter=Pause/Play}"/>
                        </Button>
                        <!--Seek Forward Button-->
                        <Button Command="{Binding SeekCommand}"
                                CommandParameter="{c:Double 10}"
                                ToolTip.Tip="Seek Forward"
                                IsEnabled="{Binding CanPlay}">
                            <ic:FluentIcon Icon="SkipForward10"/>
                        </Button>
                        <!--Loop Button-->
                        <ToggleButton IsChecked="{Binding Settings.Loop}"
                                      ToolTip.Tip="{Binding Settings.Loop, Converter={StaticResource BooleanToStringConverter}, ConverterParameter=Loop is On/Loop is Off}">
                            <ic:FluentIcon Icon="{Binding Settings.Loop, Converter={StaticResource BooleanToStringConverter}, ConverterParameter=ArrowRepeatAll/ArrowRepeatAllOff}"/>
                        </ToggleButton>
                    </StackPanel>
                </StackPanel>
                <!--Media Info & Other Controls-->
                <Border Grid.Row="1"
                        BorderBrush="Gray"
                        BorderThickness="0 1 0 0">
                    <DockPanel Background="{DynamicResource SystemChromeMediumColor}"
                               ClipToBounds="True">
                        <!--Media Info-->
                        <StackPanel Orientation="Horizontal"
                                    Spacing="10"
                                    Margin="10 0 0 0">
                            <!--# of Media Files-->
                            <StackPanel Orientation="Horizontal"
                                        Spacing="5"
                                        Opacity="100"
                                        ToolTip.Tip="Audio Selected">
                                <ic:FluentIcon Icon="MusicNote2"/>
                                <TextBlock VerticalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}/{1}">
                                            <Binding Path="SelectedAssets.Count"
                                                     TargetNullValue="0"/>
                                            <Binding Path="Assets.Count"
                                                     TargetNullValue="0"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                            <!--Size Info-->
                            <StackPanel Orientation="Horizontal"
                                        Spacing="5"
                                        Opacity="100"
                                        ToolTip.Tip="Size">
                                <ic:FluentIcon Icon="Save"/>
                                <TextBlock VerticalAlignment="Center"
                                           Text="{Binding SelectedAsset?.FileSize, TargetNullValue=0 B}"/>
                            </StackPanel>
                        </StackPanel>
                        <!--Other Controls-->
                        <StackPanel HorizontalAlignment="Right"
                                    Orientation="Horizontal"
                                    Spacing="10"
                                    Margin="0 0 10 0">
                            <!--Speed Button-->
                            <Button Background="Transparent"
                                    Padding="0"
                                    ToolTip.Tip="Speed">
                                <ic:FluentIcon Icon="TopSpeed"/>
                                <Button.Styles>
                                    <Style Selector="MenuItem">
                                        <Setter Property="Command"
                                                Value="{Binding $parent.DataContext.SetSpeedCommand}"/>
                                        <Setter Property="CommandParameter"
                                                Value="{Binding}"/>
                                        <Setter Property="Icon">
                                            <Template>
                                                <ic:FluentIcon Icon="Checkmark">
                                                    <ic:FluentIcon.IsVisible>
                                                        <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                            <Binding Path="."/>
                                                            <Binding Path="$parent.DataContext.Speed"/>
                                                        </MultiBinding>
                                                    </ic:FluentIcon.IsVisible>
                                                </ic:FluentIcon>
                                            </Template>
                                        </Setter>
                                    </Style>
                                </Button.Styles>
                                <Button.Flyout>
                                    <MenuFlyout ItemsSource="{Binding Speeds}"
                                                Placement="Top"/>
                                </Button.Flyout>
                            </Button>
                            <!--Mute/Unmute Button-->
                            <Button Background="Transparent"
                                    Command="{Binding ToggleMuteCommand}"
                                    Padding="0"
                                    ToolTip.Tip="{Binding !!Settings.Volume, Converter={StaticResource BooleanToStringConverter}, ConverterParameter=Mute/Unmute}">
                                <ic:FluentIcon Icon="{Binding Settings.Volume, Converter={StaticResource VolumeToIconConverter}}"/>
                            </Button>
                            <!--Volume Slider-->
                            <Slider Margin="0 -10 0 -10"
                                    Minimum="0"
                                    Maximum="100"
                                    Width="100"
                                    Value="{Binding Settings.Volume}"
                                    ToolTip.Tip="Volume"/>
                            <!--Current Volume-->
                            <TextBlock Text="{Binding Settings.Volume}"
                                       VerticalAlignment="Center"
                                       MinWidth="20"/>
                        </StackPanel>
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
    </Grid>
</UserControl>
