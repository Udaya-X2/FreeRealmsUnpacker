//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssetIO {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AssetIO.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid manfiest path; must end with &apos;manifest.dat&apos;: &apos;{0}&apos;..
        /// </summary>
        internal static string Argument_BadManifestPath {
            get {
                return ResourceManager.GetString("Argument_BadManifestPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string Argument_InvalidOffLen {
            get {
                return ResourceManager.GetString("Argument_InvalidOffLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream was not readable..
        /// </summary>
        internal static string Argument_StreamNotReadable {
            get {
                return ResourceManager.GetString("Argument_StreamNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many manifest files in the client directory..
        /// </summary>
        internal static string Argument_TooManyManifestFiles {
            get {
                return ResourceManager.GetString("Argument_TooManyManifestFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized asset extension: &apos;{0}&apos;..
        /// </summary>
        internal static string Argument_UnknownAssetExt {
            get {
                return ResourceManager.GetString("Argument_UnknownAssetExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer cannot be null..
        /// </summary>
        internal static string ArgumentNull_Buffer {
            get {
                return ResourceManager.GetString("ArgumentNull_Buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read beyond the end of &apos;{1}&apos;..
        /// </summary>
        internal static string EndOfStream_File {
            get {
                return ResourceManager.GetString("EndOfStream_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read beyond the end of the stream..
        /// </summary>
        internal static string EndOfStream_Stream {
            get {
                return ResourceManager.GetString("EndOfStream_Stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many bytes in what should have been a 7-bit encoded integer..
        /// </summary>
        internal static string Format_Bad7BitInt {
            get {
                return ResourceManager.GetString("Format_Bad7BitInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid asset data at offset {0} in &apos;{1}&apos;..
        /// </summary>
        internal static string IO_BadAsset {
            get {
                return ResourceManager.GetString("IO_BadAsset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file was not divided in chunks of 148: &apos;{0}&apos;..
        /// </summary>
        internal static string IO_BadManifest {
            get {
                return ResourceManager.GetString("IO_BadManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decimal constructor requires an array or span of four valid decimal bytes..
        /// </summary>
        internal static string IO_InvalidDecimalBits {
            get {
                return ResourceManager.GetString("IO_InvalidDecimalBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EndianBinaryReader encountered an invalid string length of {0} characters..
        /// </summary>
        internal static string IO_InvalidStringLen {
            get {
                return ResourceManager.GetString("IO_InvalidStringLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ran out of asset packs while reading &apos;{0}&apos;..
        /// </summary>
        internal static string IO_NoMoreAssetPacks {
            get {
                return ResourceManager.GetString("IO_NoMoreAssetPacks", resourceCulture);
            }
        }
    }
}
