//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssetIO {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AssetIO.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to infer asset type from the specified file name: &quot;{0}&quot;..
        /// </summary>
        internal static string Argument_CantInferAssetType {
            get {
                return ResourceManager.GetString("Argument_CantInferAssetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asset size exceeds the length of the buffer..
        /// </summary>
        internal static string Argument_InvalidAssetLen {
            get {
                return ResourceManager.GetString("Argument_InvalidAssetLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add &quot;{0}&quot; to &quot;{1}&quot;; asset name length exceeds 128 bytes..
        /// </summary>
        internal static string Argument_InvalidAssetName {
            get {
                return ResourceManager.GetString("Argument_InvalidAssetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid asset type; exactly one file flag and at most one directory flag must be set: &quot;{0}&quot;..
        /// </summary>
        internal static string Argument_InvalidAssetType {
            get {
                return ResourceManager.GetString("Argument_InvalidAssetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string Argument_InvalidOffLen {
            get {
                return ResourceManager.GetString("Argument_InvalidOffLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream was not readable..
        /// </summary>
        internal static string Argument_StreamNotReadable {
            get {
                return ResourceManager.GetString("Argument_StreamNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream was not writable..
        /// </summary>
        internal static string Argument_StreamNotWritable {
            get {
                return ResourceManager.GetString("Argument_StreamNotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer cannot be null..
        /// </summary>
        internal static string ArgumentNull_Buffer {
            get {
                return ResourceManager.GetString("ArgumentNull_Buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum value was out of legal range..
        /// </summary>
        internal static string ArgumentOutOfRange_Enum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of file reached before assets were parsed: &quot;{0}&quot;..
        /// </summary>
        internal static string EndOfStream_AssetFile {
            get {
                return ResourceManager.GetString("EndOfStream_AssetFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read beyond the end of the stream..
        /// </summary>
        internal static string EndOfStream_Stream {
            get {
                return ResourceManager.GetString("EndOfStream_Stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many bytes in what should have been a 7-bit encoded integer..
        /// </summary>
        internal static string Format_Bad7BitInt {
            get {
                return ResourceManager.GetString("Format_Bad7BitInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified integer &quot;{0}&quot; was not in the range [1, 128]..
        /// </summary>
        internal static string InvalidAsset_Name {
            get {
                return ResourceManager.GetString("InvalidAsset_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified integer &quot;{0}&quot; was not in the range [0, 9223372036854775807]..
        /// </summary>
        internal static string InvalidAsset_Offset {
            get {
                return ResourceManager.GetString("InvalidAsset_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot flush an asset that does not exist. Call Add to create an asset..
        /// </summary>
        internal static string InvalidOperation_NoAssetToFlush {
            get {
                return ResourceManager.GetString("InvalidOperation_NoAssetToFlush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to an asset that does not exist. Call Add to create an asset or specify the asset name in Write..
        /// </summary>
        internal static string InvalidOperation_NoAssetToWrite {
            get {
                return ResourceManager.GetString("InvalidOperation_NoAssetToWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The asset &quot;{0}&quot; extends past the end of &quot;{1}&quot;..
        /// </summary>
        internal static string IO_AssetEOF {
            get {
                return ResourceManager.GetString("IO_AssetEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The asset &quot;{0}&quot; is too long. This operation is limited to supporting assets less than 2 gigabytes in size..
        /// </summary>
        internal static string IO_AssetTooLong2GB {
            get {
                return ResourceManager.GetString("IO_AssetTooLong2GB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid asset data at offset {0} in &quot;{1}&quot;..
        /// </summary>
        internal static string IO_BadAsset {
            get {
                return ResourceManager.GetString("IO_BadAsset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asset .dat file has an incorrect size ({0} != 209715200): &quot;{1}&quot;..
        /// </summary>
        internal static string IO_BadAssetDat {
            get {
                return ResourceManager.GetString("IO_BadAssetDat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid asset info at offset {0} in &quot;{1}&quot;; listed assets exceed size of 8192 bytes..
        /// </summary>
        internal static string IO_BadAssetInfo {
            get {
                return ResourceManager.GetString("IO_BadAssetInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest.dat file was not divided in chunks of 148: &quot;{0}&quot;..
        /// </summary>
        internal static string IO_BadManifest {
            get {
                return ResourceManager.GetString("IO_BadManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create temporary file &quot;{0}&quot;; the file already exists..
        /// </summary>
        internal static string IO_CantCreateTempFile {
            get {
                return ResourceManager.GetString("IO_CantCreateTempFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The asset &quot;{0}&quot; does not match the expected CRC-32 ({1} != {2}) in &quot;{3}&quot;..
        /// </summary>
        internal static string IO_CrcMismatch {
            get {
                return ResourceManager.GetString("IO_CrcMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decimal constructor requires an array or span of four valid decimal bytes..
        /// </summary>
        internal static string IO_InvalidDecimalBits {
            get {
                return ResourceManager.GetString("IO_InvalidDecimalBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EndianBinaryReader encountered an invalid string length of {0} characters..
        /// </summary>
        internal static string IO_InvalidStringLen {
            get {
                return ResourceManager.GetString("IO_InvalidStringLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ran out of asset .dat files while reading &quot;{0}&quot;..
        /// </summary>
        internal static string IO_NoMoreAssetDatFilesRead {
            get {
                return ResourceManager.GetString("IO_NoMoreAssetDatFilesRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ran out of asset .dat files while writing &quot;{0}&quot;..
        /// </summary>
        internal static string IO_NoMoreAssetDatFilesWrite {
            get {
                return ResourceManager.GetString("IO_NoMoreAssetDatFilesWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing to .pack.temp files is not supported; convert the file to .pack first..
        /// </summary>
        internal static string NotSupported_PackTempWrite {
            get {
                return ResourceManager.GetString("NotSupported_PackTempWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add &quot;{0}&quot; to &quot;{1}&quot;; asset .pack file exceeds maximum capacity..
        /// </summary>
        internal static string Overflow_CantAddAsset {
            get {
                return ResourceManager.GetString("Overflow_CantAddAsset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of assets exceeds the maximum integer value: &quot;{0}&quot;..
        /// </summary>
        internal static string Overflow_TooManyAssets {
            get {
                return ResourceManager.GetString("Overflow_TooManyAssets", resourceCulture);
            }
        }
    }
}
